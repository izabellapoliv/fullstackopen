{"ast":null,"code":"import _slicedToArray from \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/src/AppPart2-5.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  useEffect(() => {\n    // console.log('effect')\n    axios.get('http://localhost:3001/notes').then(response => {\n      console.log('promise fulfilled');\n      setNotes(response.data);\n    });\n  }, []); // console.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const addNote = event => {\n    event.preventDefault(); // console.log('button clicked', event.target)\n\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    axios.post('http://localhost:3001/notes', noteObj).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all'), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/izabella/Área de Trabalho/fullstackopen/examples/src/AppPart2-5.js"],"names":["React","useState","useEffect","axios","Note","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","get","then","response","console","log","data","notesToShow","filter","note","important","addNote","event","preventDefault","noteObj","content","date","Date","toISOString","Math","random","post","concat","handleNoteChange","target","value","rows","map","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACYJ,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACPK,KADO;AAAA,QACAC,QADA;;AAAA,qBAEgBN,QAAQ,CAAC,YAAD,CAFxB;AAAA;AAAA,QAEPO,OAFO;AAAA,QAEEC,UAFF;;AAAA,qBAGgBR,QAAQ,CAAC,IAAD,CAHxB;AAAA;AAAA,QAGPS,OAHO;AAAA,QAGEC,UAHF;;AAKdT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAC,IAAAA,KAAK,CACAS,GADL,CACS,6BADT,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAT,MAAAA,QAAQ,CAACO,QAAQ,CAACG,IAAV,CAAR;AACH,KALL;AAMH,GARQ,EAQN,EARM,CAAT,CALc,CAcd;;AAEA,QAAMC,WAAW,GAAGR,OAAO,GACrBJ,KADqB,GAErBA,KAAK,CAACa,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAFN;;AAIA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBA,IAAAA,KAAK,CAACC,cAAN,GADqB,CAErB;;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,OAAO,EAAElB,OADG;AAEZmB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFM;AAGZR,MAAAA,SAAS,EAAES,IAAI,CAACC,MAAL,KAAgB;AAHf,KAAhB;AAMA5B,IAAAA,KAAK,CACA6B,IADL,CACU,6BADV,EACyCP,OADzC,EAEKZ,IAFL,CAEUC,QAAQ,IAAI;AACdP,MAAAA,QAAQ,CAACD,KAAK,CAAC2B,MAAN,CAAanB,QAAQ,CAACG,IAAtB,CAAD,CAAR;AACAR,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH,KALL;AAMH,GAfD;;AAgBA,QAAMyB,gBAAgB,GAAGX,KAAK,IAAI;AAC9BR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACY,MAAN,CAAaC,KAAzB;AACA3B,IAAAA,UAAU,CAACc,KAAK,CAACY,MAAN,CAAaC,KAAd,CAAV;AACH,GAHD;;AAKA,QAAMC,IAAI,GAAG,MAAMnB,WAAW,CAACoB,GAAZ,CAAgBlB,IAAI,IACnC,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACmB,EAAhB;AAAoB,IAAA,IAAI,EAAEnB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAAnB;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMT,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUA,OAAO,GAAG,WAAH,GAAiB,KADlC,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK2B,IAAI,EADT,CALJ,EAQI;AAAM,IAAA,QAAQ,EAAEf,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAEd,OAAd;AAAuB,IAAA,QAAQ,EAAE0B,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CARJ,CADJ;AAeH,CA5DD;;AA8DA,eAAe7B,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('a new note')\n    const [showAll, setShowAll] = useState(true)\n\n    useEffect(() => {\n        // console.log('effect')\n        axios\n            .get('http://localhost:3001/notes')\n            .then(response => {\n                console.log('promise fulfilled')\n                setNotes(response.data)\n            })\n    }, [])\n    // console.log('render', notes.length, 'notes')\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    const addNote = event => {\n        event.preventDefault()\n        // console.log('button clicked', event.target)\n        const noteObj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        }\n\n        axios\n            .post('http://localhost:3001/notes', noteObj)\n            .then(response => {\n                setNotes(notes.concat(response.data))\n                setNewNote('')\n            })\n    }\n    const handleNoteChange = event => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const rows = () => notesToShow.map(note =>\n        <Note key={note.id} note={note} />\n    )\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all'}\n            </button>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}