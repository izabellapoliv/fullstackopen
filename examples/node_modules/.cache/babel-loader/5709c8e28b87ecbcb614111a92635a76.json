{"ast":null,"code":"import _slicedToArray from \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/src/AppPart3.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\n\nconst App = props => {\n  let notesDefault = [];\n  axios.get('http://localhost:3001/notes').then(response => {\n    notesDefault = response.data;\n    console.log(notesDefault);\n  });\n\n  const _useState = useState(notesDefault),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const addNote = event => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObj));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    content: note.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all'), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/izabella/Área de Trabalho/fullstackopen/examples/src/AppPart3.js"],"names":["React","useState","axios","Note","App","props","notesDefault","get","then","response","data","console","log","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","note","important","addNote","event","preventDefault","target","noteObj","content","date","Date","toISOString","Math","random","id","length","concat","handleNoteChange","value","rows","map"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACnB,MAAIC,YAAY,GAAG,EAAnB;AAEAJ,EAAAA,KAAK,CACAK,GADL,CACS,6BADT,EAEKC,IAFL,CAEUC,QAAQ,IAAI;AACdH,IAAAA,YAAY,GAAGG,QAAQ,CAACC,IAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACH,GALL;;AAHmB,oBAUOL,QAAQ,CAACK,YAAD,CAVf;AAAA;AAAA,QAUZO,KAVY;AAAA,QAULC,QAVK;;AAAA,qBAWWb,QAAQ,CAAC,YAAD,CAXnB;AAAA;AAAA,QAWZc,OAXY;AAAA,QAWHC,UAXG;;AAAA,qBAYWf,QAAQ,CAAC,IAAD,CAZnB;AAAA;AAAA,QAYZgB,OAZY;AAAA,QAYHC,UAZG;;AAcnB,QAAMC,WAAW,GAAGF,OAAO,GACrBJ,KADqB,GAErBA,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAFN;;AAIA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,KAAK,CAACE,MAApC;AACA,UAAMC,OAAO,GAAG;AACZC,MAAAA,OAAO,EAAEb,OADG;AAEZc,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFM;AAGZT,MAAAA,SAAS,EAAEU,IAAI,CAACC,MAAL,KAAgB,GAHf;AAIZC,MAAAA,EAAE,EAAErB,KAAK,CAACsB,MAAN,GAAe;AAJP,KAAhB;AAOArB,IAAAA,QAAQ,CAACD,KAAK,CAACuB,MAAN,CAAaT,OAAb,CAAD,CAAR;AACAX,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAZD;;AAaA,QAAMqB,gBAAgB,GAAGb,KAAK,IAAI;AAC9Bb,IAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACE,MAAN,CAAaY,KAAzB;AACAtB,IAAAA,UAAU,CAACQ,KAAK,CAACE,MAAN,CAAaY,KAAd,CAAV;AACH,GAHD;;AAKA,QAAMC,IAAI,GAAG,MAAMpB,WAAW,CAACqB,GAAZ,CAAgBnB,IAAI,IACnC,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACa,EAAhB;AAAoB,IAAA,OAAO,EAAEb,IAAI,CAACO,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,CAAnB;;AAIA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,IAAA,OAAO,EAAE,MAAMV,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACUA,OAAO,GAAG,WAAH,GAAiB,KADlC,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKsB,IAAI,EADT,CALJ,EAQI;AAAM,IAAA,QAAQ,EAAEhB,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAER,OAAd;AAAuB,IAAA,QAAQ,EAAEsB,gBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CARJ,CADJ;AAeH,CAvDD;;AAyDA,eAAejC,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst App = (props) => {\n    let notesDefault = []\n\n    axios\n        .get('http://localhost:3001/notes')\n        .then(response => {\n            notesDefault = response.data\n            console.log(notesDefault)\n        })\n\n    const [notes, setNotes] = useState(notesDefault)\n    const [newNote, setNewNote] = useState('a new note')\n    const [showAll, setShowAll] = useState(true)\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    const addNote = event => {\n        event.preventDefault()\n        console.log('button clicked', event.target)\n        const noteObj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n            id: notes.length + 1\n        }\n\n        setNotes(notes.concat(noteObj))\n        setNewNote('')\n    }\n    const handleNoteChange = event => {\n        console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const rows = () => notesToShow.map(note =>\n        <Note key={note.id} content={note.content} />\n    )\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all'}\n            </button>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}