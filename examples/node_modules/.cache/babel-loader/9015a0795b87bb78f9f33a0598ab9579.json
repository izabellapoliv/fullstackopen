{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:3001/notes';\n\nconst getRequestObject = request => request.then(response => response.data);\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  };\n  return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = newObject => getRequestObject(axios.post(baseUrl, newObject));\n\nconst update = (id, newObject) => getRequestObject(axios.put(`${baseUrl}/${id}`, newObject));\n\nexport default {\n  getAll,\n  create,\n  update\n};","map":{"version":3,"sources":["/home/izabella/Área de Trabalho/fullstackopen/examples/src/services/notes.js"],"names":["axios","baseUrl","getRequestObject","request","then","response","data","getAll","get","nonExisting","id","content","date","important","concat","create","newObject","post","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAApC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,QAAMJ,OAAO,GAAGH,KAAK,CAACQ,GAAN,CAAUP,OAAV,CAAhB;AACA,QAAMQ,WAAW,GAAG;AAChBC,IAAAA,EAAE,EAAE,KADY;AAEhBC,IAAAA,OAAO,EAAE,kCAFO;AAGhBC,IAAAA,IAAI,EAAE,0BAHU;AAIhBC,IAAAA,SAAS,EAAE;AAJK,GAApB;AAMA,SAAOV,OAAO,CAACC,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcQ,MAAd,CAAqBL,WAArB,CAAzB,CAAP;AACH,CATD;;AAWA,MAAMM,MAAM,GAAGC,SAAS,IAAId,gBAAgB,CAACF,KAAK,CAACiB,IAAN,CAAWhB,OAAX,EAAoBe,SAApB,CAAD,CAA5C;;AAEA,MAAME,MAAM,GAAG,CAACR,EAAD,EAAKM,SAAL,KAAmBd,gBAAgB,CAACF,KAAK,CAACmB,GAAN,CAAW,GAAElB,OAAQ,IAAGS,EAAG,EAA3B,EAA8BM,SAA9B,CAAD,CAAlD;;AAEA,eAAe;AAAET,EAAAA,MAAF;AAAUQ,EAAAA,MAAV;AAAkBG,EAAAA;AAAlB,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/notes'\n\nconst getRequestObject = request => request.then(response => response.data)\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => getRequestObject(axios.post(baseUrl, newObject))\n\nconst update = (id, newObject) => getRequestObject(axios.put(`${baseUrl}/${id}`, newObject))\n\nexport default { getAll, create, update }\n"]},"metadata":{},"sourceType":"module"}