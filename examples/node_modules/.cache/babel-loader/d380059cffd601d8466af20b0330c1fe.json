{"ast":null,"code":"import _objectSpread from \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/src/AppPart2-5.js\";\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport Notification from './components/Notification';\nimport noteService from './services/notes';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const _useState7 = useState('msg errrprprrororo'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorMessage = _useState8[0],\n        setErrorMessage = _useState8[1];\n\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      // console.log('promise fulfilled')\n      setNotes(initialNotes);\n    });\n  }, []); // console.log('render', notes.length, 'notes')\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const addNote = event => {\n    event.preventDefault(); // console.log('button clicked', event.target)\n\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObj).then(newNote => {\n      setNotes(notes.concat(newNote));\n      setNewNote('');\n    });\n  };\n\n  const handleNoteChange = event => {\n    // console.log(event.target.value)\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(item => item.id === id);\n\n    const changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    noteService.update(id, changedNote).then(updatedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : updatedNote));\n    }).catch(error => {\n      alert(`The note '${note.content}' was already deleted from the server`);\n      setNotes(notes.filter(note => note.id !== id));\n    });\n  };\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportanceOf(note.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Notification, {\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all'), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/izabella/Área de Trabalho/fullstackopen/examples/src/AppPart2-5.js"],"names":["React","useState","useEffect","Note","Notification","noteService","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","getAll","then","initialNotes","notesToShow","filter","note","important","addNote","event","preventDefault","noteObj","content","date","Date","toISOString","Math","random","create","concat","handleNoteChange","target","value","toggleImportanceOf","id","find","item","changedNote","update","updatedNote","map","catch","error","alert","rows"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport noteService from './services/notes'\n\nconst App = () => {\n    const [notes, setNotes] = useState([])\n    const [newNote, setNewNote] = useState('a new note')\n    const [showAll, setShowAll] = useState(true)\n    const [errorMessage, setErrorMessage] = useState('msg errrprprrororo')\n\n    useEffect(() => {\n        noteService\n            .getAll()\n            .then(initialNotes => {\n                // console.log('promise fulfilled')\n                setNotes(initialNotes)\n            })\n    }, [])\n    // console.log('render', notes.length, 'notes')\n\n    const notesToShow = showAll\n        ? notes\n        : notes.filter(note => note.important)\n\n    const addNote = event => {\n        event.preventDefault()\n        // console.log('button clicked', event.target)\n        const noteObj = {\n            content: newNote,\n            date: new Date().toISOString(),\n            important: Math.random() > 0.5,\n        }\n\n        noteService\n            .create(noteObj)\n            .then(newNote => {\n                setNotes(notes.concat(newNote))\n                setNewNote('')\n            })\n    }\n    const handleNoteChange = event => {\n        // console.log(event.target.value)\n        setNewNote(event.target.value)\n    }\n\n    const toggleImportanceOf = id => {\n        const note = notes.find(item => item.id === id)\n        const changedNote = { ...note, important: !note.important }\n\n        noteService\n            .update(id, changedNote)\n            .then(updatedNote => {\n                setNotes(notes.map(note =>\n                    note.id !== id ? note : updatedNote\n                ))\n            })\n            .catch(error => {\n                alert(`The note '${note.content}' was already deleted from the server`)\n                setNotes(notes.filter(note => note.id !== id))\n            })\n    }\n    const rows = () => notesToShow.map(note =>\n        <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n        />\n    )\n\n    return (\n        <div>\n            <h1>Notes</h1>\n            <Notification message={errorMessage} />\n            <button onClick={() => setShowAll(!showAll)}>\n                show {showAll ? 'important' : 'all'}\n            </button>\n            <ul>\n                {rows()}\n            </ul>\n            <form onSubmit={addNote}>\n                <input value={newNote} onChange={handleNoteChange} />\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}