{"ast":null,"code":"import _slicedToArray from \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/izabella/\\xC1rea de Trabalho/fullstackopen/examples/src/AppPart3.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Note from './components/Note';\nconst promise = axios.get('http://localhost:3001/notes');\nconsole.log(promise);\nconst promise2 = axios.get('http://localhost:3001/foobar');\nconsole.log(promise2);\n\nconst App = props => {\n  const notesDefault = [{\n    id: 1,\n    content: 'HTML is easy',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  }, {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2019-05-30T18:39:34.091Z',\n    important: false\n  }, {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2019-05-30T19:20:14.298Z',\n    important: true\n  }];\n\n  const _useState = useState(notesDefault),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const addNote = event => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObj));\n    setNewNote('');\n  };\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    content: note.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all'), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/izabella/Área de Trabalho/fullstackopen/examples/src/AppPart3.js"],"names":["React","useState","axios","Note","promise","get","console","log","promise2","App","props","notesDefault","id","content","date","important","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","note","addNote","event","preventDefault","target","noteObj","Date","toISOString","Math","random","length","concat","handleNoteChange","value","rows","map"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\n\nconst promise = axios.get('http://localhost:3001/notes')\nconsole.log(promise)\n\nconst promise2 = axios.get('http://localhost:3001/foobar')\nconsole.log(promise2)\n\nconst App = (props) => {\n  const notesDefault = [\n    {\n      id: 1,\n      content: 'HTML is easy',\n      date: '2019-05-30T17:30:31.098Z',\n      important: true\n    },\n    {\n      id: 2,\n      content: 'Browser can execute only Javascript',\n      date: '2019-05-30T18:39:34.091Z',\n      important: false\n    },\n    {\n      id: 3,\n      content: 'GET and POST are the most important methods of HTTP protocol',\n      date: '2019-05-30T19:20:14.298Z',\n      important: true\n    }\n  ]\n  const [notes, setNotes] = useState(notesDefault)\n  const [newNote, setNewNote] = useState('a new note')\n  const [showAll, setShowAll] = useState(true)\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const addNote = event => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const noteObj = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    }\n\n    setNotes(notes.concat(noteObj))\n    setNewNote('')\n  }\n  const handleNoteChange = event => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <Note key={note.id} content={note.content} />\n  )\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important' : 'all'}\n      </button>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}